name: staging-spawner

on:
  push:
    branches: [development]

jobs:
  build_staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build the Docker image
        run: docker-compose build
        env:
          digitaltwin_spawner_tag: ${{ github.sha }}
          digitaltwin_frontend_tag: ${{ github.sha }}
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Push spawner to dockerhub
        run: docker push threefoldjimber/digitaltwin-spawner:${{ github.sha }}
      - name: Push frontend to dockerhub
        run: docker push threefoldjimber/digitaltwin-frontend:${{ github.sha }}
      - name: Push proxy to dockerhub
        run: docker push threefoldjimber/digitaltwin-proxy:${{ github.sha }}
      - name: Push latest to dockerhub
        run: |
          docker tag threefoldjimber/digitaltwin-spawner:${{ github.sha }} threefoldjimber/digitaltwin-spawner:latest
          docker tag threefoldjimber/digitaltwin-frontend:${{ github.sha }} threefoldjimber/digitaltwin-frontend:latest
          docker tag threefoldjimber/digitaltwin-proxy:${{ github.sha }} threefoldjimber/digitaltwin-proxy:latest
          docker push threefoldjimber/digitaltwin-spawner:latest
          docker push threefoldjimber/digitaltwin-frontend:latest
          docker push threefoldjimber/digitaltwin-proxy:latest
          docker push threefoldjimber/digitaltwin-spawner:${{ github.sha }}
          docker push threefoldjimber/digitaltwin-frontend:${{ github.sha }}
          docker push threefoldjimber/digitaltwin-proxy:${{ github.sha }}
  deploy_staging:
    needs: [build_staging]
    runs-on: ubuntu-latest
    environment:
      name: digitaltwin.staging
      url: https://digitaltwin-test.jimbertesting.be/
    steps:
      - name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ${{ secrets.SSH_HOST }}
          ssh_private_key: ${{ secrets.SSH_KEY }}
          ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          stack_file_name: docker-compose.yml
          args: up -d
          pull_images_first: "true"
